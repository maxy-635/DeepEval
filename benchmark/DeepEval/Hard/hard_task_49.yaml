Requirement: "Please assist me in creating a deep learning model for image classification
  using the MNIST dataset. The model is structured into two blocks. The first block processes
  the input through three average pooling layers with varying scales, utilizing pooling 
  windows and strides of 1x1, 2x2, and 4x4. Each pooling result is flattened into a 
  one-dimensional vector, and these vectors are concatenated. Between the first and second 
  blocks, a fully connected layer and a reshape operation transform the output of the first
  block into a 4-dimensional tensor, suitable for input into the second block. The second
  block splits the input into four groups along the last dimension by encapsulating tf.split
  within Lambda layer, each processed by depthwise separable convolutional layers with 
  different kernel sizes (1x1, 3x3, 5x5, and 7x7) for feature extraction. The outputs from
  these groups are then concatenated. Finally, the processed data is flattened and passed 
  through a fully connected layer to produce the classification result."
